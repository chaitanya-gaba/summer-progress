body {
  font-family: Arial, sans-serif;
  background: #f0f0f5;
  padding: 2rem;
  line-height: 1.5;
}

h1 {
  text-align: center;
  margin-bottom: 2rem;
}

.grid-section {
  margin-bottom: 3rem;
  padding: 1rem;
  background: #fff;
  border-radius: 0.8rem;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

h2 {
  margin-bottom: 1rem;
  color: #2c3e50;
}

.box, .outer-box, .inner-box {
  background-color: #3498db;
  color: white;
  padding: 1rem;
  text-align: center;
  font-weight: bold;
  border-radius: 0.4rem;
}

/* 1. Basic Grid */
.grid-basic {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}

/* 2. Spanning Items */
.grid-span {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}
.span2col { grid-column: span 2; background-color: #e67e22; }
.span2row { grid-row: span 2; background-color: #9b59b6; }

/* 3. Named Areas (Simple) */
.grid-areas {
  display: grid;
  grid-template-areas:
    "header header"
    "sidebar main"
    "footer footer";
  grid-template-columns: 1fr 3fr;
  gap: 1rem;
}
.grid-areas > div {
  background-color: #2ecc71;
  padding: 1rem;
  border-radius: 0.4rem;
  color: white;
  font-weight: bold;
}
.header  { grid-area: header; }
.sidebar { grid-area: sidebar; }
.main    { grid-area: main; }
.footer  { grid-area: footer; }

/* 4. Responsive Grid */
.grid-responsive {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 1rem;
}

/* 5. Nested Grid (Simple) */
.grid-nested {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}
.outer-box { background-color: #e74c3c; padding: 1rem; border-radius: 0.5rem; color: white; font-weight: bold; }
.inner-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 0.5rem; margin-top: 0.5rem; }
.inner-box { background-color: #34495e; padding: 0.5rem; }

/* 6. Grid with Gaps */
.grid-gap {
  display: grid;
  grid-template-columns: 100px 100px;
  gap: 20px;
}

/* 7. Fraction Units */
.grid-fr {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  gap: 1rem;
}

/* 8. Repeat() */
.grid-repeat {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}

/* 9. Minmax */
.grid-minmax {
  display: grid;
  grid-template-columns: repeat(2, minmax(150px, 1fr));
  gap: 1rem;
}

/* 10. Auto-fit / Auto-fill */
.grid-autofit {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: 10px;
}

/* 11. Named Areas (Complex Layout) */
.grid-areas-complex {
  display: grid;
  grid-template-areas:
    "header header"
    "nav main"
    "nav sidebar"
    "footer footer";
  grid-template-columns: 1fr 2fr;
  gap: 10px;
}
.grid-areas-complex header { grid-area: header; background: lightcoral; }
.grid-areas-complex nav    { grid-area: nav; background: lightgreen; }
.grid-areas-complex main   { grid-area: main; background: lightblue; }
.grid-areas-complex aside  { grid-area: sidebar; background: orange; }
.grid-areas-complex footer { grid-area: footer; background: gray; }

/* 12. Nested Grid (Complex) */
.grid-nested-complex {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  gap: 10px;
}
.grid-nested-complex .inner-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 5px;
}

/* 13. Alignment */
.grid-align {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  height: 200px;
  justify-content: space-around;
  align-items: center;
}

/* 14. Explicit vs Implicit Grid */
.grid-explicit {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: 100px 100px;
  gap: 10px;
}
/* Extra items will automatically create implicit rows */
.grid-explicit > div {
  background-color: #8e44ad;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
}